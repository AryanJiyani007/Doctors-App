{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/components/ui/card.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction CardHeader({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction CardTitle({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction CardDescription({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction CardAction({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction CardContent({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (<div data-slot=\"card-content\" className={cn(\"px-6\", className)} {...props} />);\r\n}\r\n\r\nfunction CardFooter({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAEA;;;;AAEA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAEf;KAbS;AAeT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,UAAU,EACjB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBAAQ,6LAAC;QAAI,aAAU;QAAe,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QAAa,GAAG,KAAK;;;;;;AACnF;MALS;AAOT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAEf;MAVS","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/components/ui/button.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    (<Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OACJ;IACC,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAEf;KAfS","debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/components/ui/separator.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Separator({\r\n  className,\r\n  orientation = \"horizontal\",\r\n  decorative = true,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<SeparatorPrimitive.Root\r\n      data-slot=\"separator-root\"\r\n      decorative={decorative}\r\n      orientation={orientation}\r\n      className={cn(\r\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Separator }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACJ;IACC,qBACG,6LAAC,wKAAA,CAAA,OAAuB;QACvB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAEf;KAjBS","debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/components/ui/dialog.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { XIcon } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Dialog({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\r\n}\r\n\r\nfunction DialogTrigger({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\r\n}\r\n\r\nfunction DialogPortal({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\r\n}\r\n\r\nfunction DialogClose({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\r\n}\r\n\r\nfunction DialogOverlay({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<DialogPrimitive.Overlay\r\n      data-slot=\"dialog-overlay\"\r\n      className={cn(\r\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction DialogContent({\r\n  className,\r\n  children,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<DialogPortal data-slot=\"dialog-portal\">\r\n      <DialogOverlay />\r\n      <DialogPrimitive.Content\r\n        data-slot=\"dialog-content\"\r\n        className={cn(\r\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\r\n          className\r\n        )}\r\n        {...props}>\r\n        {children}\r\n        <DialogPrimitive.Close\r\n          className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\r\n          <XIcon />\r\n          <span className=\"sr-only\">Close</span>\r\n        </DialogPrimitive.Close>\r\n      </DialogPrimitive.Content>\r\n    </DialogPortal>)\r\n  );\r\n}\r\n\r\nfunction DialogHeader({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"dialog-header\"\r\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction DialogFooter({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"dialog-footer\"\r\n      className={cn(\"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction DialogTitle({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<DialogPrimitive.Title\r\n      data-slot=\"dialog-title\"\r\n      className={cn(\"text-lg leading-none font-semibold\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction DialogDescription({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<DialogPrimitive.Description\r\n      data-slot=\"dialog-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogOverlay,\r\n  DialogPortal,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,EACrB,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,EACpB,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC,qKAAA,CAAA,UAAuB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACJ;IACC,qBACG,6LAAC;QAAa,aAAU;;0BACvB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBACR;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBACpB,WAAU;;0CACV,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;MAxBS;AA0BT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,0DAA0D;QACvE,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC,qKAAA,CAAA,QAAqB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC,qKAAA,CAAA,cAA2B;QAC3B,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEf;MAVS","debugId":null}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/components/ui/badge.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Badge({\r\n  className,\r\n  variant,\r\n  asChild = false,\r\n  ...props\r\n}) {\r\n  const Comp = asChild ? Slot : \"span\"\r\n\r\n  return (\r\n    (<Comp\r\n      data-slot=\"badge\"\r\n      className={cn(badgeVariants({ variant }), className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OACJ;IACC,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAEf;KAdS","debugId":null}},
    {"offset": {"line": 480, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/actions/admin.js"],"sourcesContent":["\"use server\";\r\n\r\nimport { db } from \"@/lib/prisma\";\r\nimport { auth } from \"@clerk/nextjs/server\";\r\nimport { revalidatePath } from \"next/cache\";\r\n\r\n/**\r\n * Verifies if current user has admin role\r\n */\r\nexport async function verifyAdmin() {\r\n  const { userId } = await auth();\r\n\r\n  if (!userId) {\r\n    return false;\r\n  }\r\n\r\n  try {\r\n    const user = await db.user.findUnique({\r\n      where: {\r\n        clerkUserId: userId,\r\n      },\r\n    });\r\n\r\n    return user?.role === \"ADMIN\";\r\n  } catch (error) {\r\n    console.error(\"Failed to verify admin:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all doctors with pending verification\r\n */\r\nexport async function getPendingDoctors() {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  try {\r\n    const pendingDoctors = await db.user.findMany({\r\n      where: {\r\n        role: \"DOCTOR\",\r\n        verificationStatus: \"PENDING\",\r\n      },\r\n      orderBy: {\r\n        createdAt: \"desc\",\r\n      },\r\n    });\r\n\r\n    return { doctors: pendingDoctors };\r\n  } catch (error) {\r\n    throw new Error(\"Failed to fetch pending doctors\");\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all verified doctors\r\n */\r\nexport async function getVerifiedDoctors() {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  try {\r\n    const verifiedDoctors = await db.user.findMany({\r\n      where: {\r\n        role: \"DOCTOR\",\r\n        verificationStatus: \"VERIFIED\",\r\n      },\r\n      orderBy: {\r\n        name: \"asc\",\r\n      },\r\n    });\r\n\r\n    return { doctors: verifiedDoctors };\r\n  } catch (error) {\r\n    console.error(\"Failed to get verified doctors:\", error);\r\n    return { error: \"Failed to fetch verified doctors\" };\r\n  }\r\n}\r\n\r\n/**\r\n * Updates a doctor's verification status\r\n */\r\nexport async function updateDoctorStatus(formData) {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  const doctorId = formData.get(\"doctorId\");\r\n  const status = formData.get(\"status\");\r\n\r\n  if (!doctorId || ![\"VERIFIED\", \"REJECTED\"].includes(status)) {\r\n    throw new Error(\"Invalid input\");\r\n  }\r\n\r\n  try {\r\n    await db.user.update({\r\n      where: {\r\n        id: doctorId,\r\n      },\r\n      data: {\r\n        verificationStatus: status,\r\n      },\r\n    });\r\n\r\n    revalidatePath(\"/admin\");\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error(\"Failed to update doctor status:\", error);\r\n    throw new Error(`Failed to update doctor status: ${error.message}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Suspends or reinstates a doctor\r\n */\r\nexport async function updateDoctorActiveStatus(formData) {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  const doctorId = formData.get(\"doctorId\");\r\n  const suspend = formData.get(\"suspend\") === \"true\";\r\n\r\n  if (!doctorId) {\r\n    throw new Error(\"Doctor ID is required\");\r\n  }\r\n\r\n  try {\r\n    const status = suspend ? \"PENDING\" : \"VERIFIED\";\r\n\r\n    await db.user.update({\r\n      where: {\r\n        id: doctorId,\r\n      },\r\n      data: {\r\n        verificationStatus: status,\r\n      },\r\n    });\r\n\r\n    revalidatePath(\"/admin\");\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error(\"Failed to update doctor active status:\", error);\r\n    throw new Error(`Failed to update doctor status: ${error.message}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all pending payouts that need admin approval\r\n */\r\nexport async function getPendingPayouts() {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  try {\r\n    const pendingPayouts = await db.payout.findMany({\r\n      where: {\r\n        status: \"PROCESSING\",\r\n      },\r\n      include: {\r\n        doctor: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n            email: true,\r\n            specialty: true,\r\n            credits: true,\r\n          },\r\n        },\r\n      },\r\n      orderBy: {\r\n        createdAt: \"desc\",\r\n      },\r\n    });\r\n\r\n    return { payouts: pendingPayouts };\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch pending payouts:\", error);\r\n    throw new Error(\"Failed to fetch pending payouts\");\r\n  }\r\n}\r\n\r\n/**\r\n * Approves a payout request and deducts credits from doctor's account\r\n */\r\nexport async function approvePayout(formData) {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  const payoutId = formData.get(\"payoutId\");\r\n\r\n  if (!payoutId) {\r\n    throw new Error(\"Payout ID is required\");\r\n  }\r\n\r\n  try {\r\n    // Get admin user info\r\n    const { userId } = await auth();\r\n    const admin = await db.user.findUnique({\r\n      where: { clerkUserId: userId },\r\n    });\r\n\r\n    // Find the payout request\r\n    const payout = await db.payout.findUnique({\r\n      where: {\r\n        id: payoutId,\r\n        status: \"PROCESSING\",\r\n      },\r\n      include: {\r\n        doctor: true,\r\n      },\r\n    });\r\n\r\n    if (!payout) {\r\n      throw new Error(\"Payout request not found or already processed\");\r\n    }\r\n\r\n    // Check if doctor has enough credits\r\n    if (payout.doctor.credits < payout.credits) {\r\n      throw new Error(\"Doctor doesn't have enough credits for this payout\");\r\n    }\r\n\r\n    // Process the payout in a transaction\r\n    await db.$transaction(async (tx) => {\r\n      // Update payout status to PROCESSED\r\n      await tx.payout.update({\r\n        where: {\r\n          id: payoutId,\r\n        },\r\n        data: {\r\n          status: \"PROCESSED\",\r\n          processedAt: new Date(),\r\n          processedBy: admin?.id || \"unknown\",\r\n        },\r\n      });\r\n\r\n      // Deduct credits from doctor's account\r\n      await tx.user.update({\r\n        where: {\r\n          id: payout.doctorId,\r\n        },\r\n        data: {\r\n          credits: {\r\n            decrement: payout.credits,\r\n          },\r\n        },\r\n      });\r\n\r\n      // Create a transaction record for the deduction\r\n      await tx.creditTransaction.create({\r\n        data: {\r\n          userId: payout.doctorId,\r\n          amount: -payout.credits,\r\n          type: \"ADMIN_ADJUSTMENT\",\r\n        },\r\n      });\r\n    });\r\n\r\n    revalidatePath(\"/admin\");\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error(\"Failed to approve payout:\", error);\r\n    throw new Error(`Failed to approve payout: ${error.message}`);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;IAkFsB,qBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/hooks/use-fetch.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { toast } from \"sonner\";\r\n\r\nconst useFetch = (cb) => {\r\n  const [data, setData] = useState(undefined);\r\n  const [loading, setLoading] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fn = async (...args) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await cb(...args);\r\n      setData(response);\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(error);\r\n      toast.error(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { data, loading, error, fn, setData };\r\n};\r\n\r\nexport default useFetch;\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;;AAEA,MAAM,WAAW,CAAC;;IAChB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,KAAK,OAAO,GAAG;QACnB,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,QAAQ;YACR,SAAS;QACX,EAAE,OAAO,OAAO;YACd,SAAS;YACT,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO;QAC3B,SAAU;YACR,WAAW;QACb;IACF;IAEA,OAAO;QAAE;QAAM;QAAS;QAAO;QAAI;IAAQ;AAC7C;GAtBM;uCAwBS","debugId":null}},
    {"offset": {"line": 542, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/app/%28main%29/admin/components/pending-doctors.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Check, X, User, Medal, FileText, ExternalLink } from \"lucide-react\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from \"@/components/ui/dialog\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { format } from \"date-fns\";\r\nimport { updateDoctorStatus } from \"@/actions/admin\";\r\nimport useFetch from \"@/hooks/use-fetch\";\r\nimport { useEffect } from \"react\";\r\nimport { BarLoader } from \"react-spinners\";\r\n\r\nexport function PendingDoctors({ doctors }) {\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n\r\n  // Custom hook for approve/reject server action\r\n  const {\r\n    loading,\r\n    data,\r\n    fn: submitStatusUpdate,\r\n  } = useFetch(updateDoctorStatus);\r\n\r\n  // Open doctor details dialog\r\n  const handleViewDetails = (doctor) => {\r\n    setSelectedDoctor(doctor);\r\n  };\r\n\r\n  // Close doctor details dialog\r\n  const handleCloseDialog = () => {\r\n    setSelectedDoctor(null);\r\n  };\r\n\r\n  // Handle approve or reject doctor\r\n  const handleUpdateStatus = async (doctorId, status) => {\r\n    if (loading) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"doctorId\", doctorId);\r\n    formData.append(\"status\", status);\r\n\r\n    await submitStatusUpdate(formData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data && data?.success) {\r\n      handleCloseDialog();\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"bg-muted/20 border-emerald-900/20\">\r\n        <CardHeader>\r\n          <CardTitle className=\"text-xl font-bold text-white\">\r\n            Pending Doctor Verifications\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Review and approve doctor applications\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {doctors.length === 0 ? (\r\n            <div className=\"text-center py-8 text-muted-foreground\">\r\n              No pending verification requests at this time.\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-4\">\r\n              {doctors.map((doctor) => (\r\n                <Card\r\n                  key={doctor.id}\r\n                  className=\"bg-background border-emerald-900/20 hover:border-emerald-700/30 transition-all\"\r\n                >\r\n                  <CardContent className=\"p-4\">\r\n                    <div className=\"flex flex-col md:flex-row md:items-center justify-between gap-4\">\r\n                      <div className=\"flex items-center gap-3\">\r\n                        <div className=\"bg-muted/20 rounded-full p-2\">\r\n                          <User className=\"h-5 w-5 text-emerald-400\" />\r\n                        </div>\r\n                        <div>\r\n                          <h3 className=\"font-medium text-white\">\r\n                            {doctor.name}\r\n                          </h3>\r\n                          <p className=\"text-sm text-muted-foreground\">\r\n                            {doctor.specialty} • {doctor.experience} years\r\n                            experience\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2 self-end md:self-auto\">\r\n                        <Badge\r\n                          variant=\"outline\"\r\n                          className=\"bg-amber-900/20 border-amber-900/30 text-amber-400\"\r\n                        >\r\n                          Pending\r\n                        </Badge>\r\n                        <Button\r\n                          variant=\"outline\"\r\n                          size=\"sm\"\r\n                          onClick={() => handleViewDetails(doctor)}\r\n                          className=\"border-emerald-900/30 hover:bg-muted/80\"\r\n                        >\r\n                          View Details\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Doctor Details Dialog */}\r\n      {selectedDoctor && (\r\n        <Dialog open={!!selectedDoctor} onOpenChange={handleCloseDialog}>\r\n          <DialogContent className=\"max-w-3xl\">\r\n            <DialogHeader>\r\n              <DialogTitle className=\"text-xl font-bold text-white\">\r\n                Doctor Verification Details\r\n              </DialogTitle>\r\n              <DialogDescription>\r\n                Review the doctor&apos;s information carefully before making a\r\n                decision\r\n              </DialogDescription>\r\n            </DialogHeader>\r\n\r\n            <div className=\"space-y-6 py-4\">\r\n              {/* Basic Info */}\r\n              <div className=\"flex flex-col md:flex-row gap-6\">\r\n                <div className=\"space-y-1 flex-1\">\r\n                  <h4 className=\"text-sm font-medium text-muted-foreground\">\r\n                    Full Name\r\n                  </h4>\r\n                  <p className=\"text-base font-medium text-white\">\r\n                    {selectedDoctor.name}\r\n                  </p>\r\n                </div>\r\n                <div className=\"space-y-1 flex-1\">\r\n                  <h4 className=\"text-sm font-medium text-muted-foreground\">\r\n                    Email\r\n                  </h4>\r\n                  <p className=\"text-base font-medium text-white\">\r\n                    {selectedDoctor.email}\r\n                  </p>\r\n                </div>\r\n                <div className=\"space-y-1 flex-1\">\r\n                  <h4 className=\"text-sm font-medium text-muted-foreground\">\r\n                    Application Date\r\n                  </h4>\r\n                  <p className=\"text-base font-medium text-white\">\r\n                    {format(new Date(selectedDoctor.createdAt), \"PPP\")}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <Separator className=\"bg-emerald-900/20\" />\r\n\r\n              {/* Professional Details */}\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Medal className=\"h-5 w-5 text-emerald-400\" />\r\n                  <h3 className=\"text-white font-medium\">\r\n                    Professional Information\r\n                  </h3>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-y-4 gap-x-6\">\r\n                  <div className=\"space-y-1\">\r\n                    <h4 className=\"text-sm font-medium text-muted-foreground\">\r\n                      Specialty\r\n                    </h4>\r\n                    <p className=\"text-white\">{selectedDoctor.specialty}</p>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-1\">\r\n                    <h4 className=\"text-sm font-medium text-muted-foreground\">\r\n                      Years of Experience\r\n                    </h4>\r\n                    <p className=\"text-white\">\r\n                      {selectedDoctor.experience} years\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-1 col-span-2\">\r\n                    <h4 className=\"text-sm font-medium text-muted-foreground\">\r\n                      Credentials\r\n                    </h4>\r\n                    <div className=\"flex items-center\">\r\n                      <a\r\n                        href={selectedDoctor.credentialUrl}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"text-emerald-400 hover:text-emerald-300 flex items-center\"\r\n                      >\r\n                        View Credentials\r\n                        <ExternalLink className=\"h-4 w-4 ml-1\" />\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <Separator className=\"bg-emerald-900/20\" />\r\n\r\n              {/* Description */}\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <FileText className=\"h-5 w-5 text-emerald-400\" />\r\n                  <h3 className=\"text-white font-medium\">\r\n                    Service Description\r\n                  </h3>\r\n                </div>\r\n                <p className=\"text-muted-foreground whitespace-pre-line\">\r\n                  {selectedDoctor.description}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            {loading && <BarLoader width={\"100%\"} color=\"#36d7b7\" />}\r\n\r\n            <DialogFooter className=\"flex sm:justify-between\">\r\n              <Button\r\n                variant=\"destructive\"\r\n                onClick={() =>\r\n                  handleUpdateStatus(selectedDoctor.id, \"REJECTED\")\r\n                }\r\n                disabled={loading}\r\n                className=\"bg-red-600 hover:bg-red-700\"\r\n              >\r\n                <X className=\"mr-2 h-4 w-4\" />\r\n                Reject\r\n              </Button>\r\n              <Button\r\n                onClick={() =>\r\n                  handleUpdateStatus(selectedDoctor.id, \"VERIFIED\")\r\n                }\r\n                disabled={loading}\r\n                className=\"bg-emerald-600 hover:bg-emerald-700\"\r\n              >\r\n                <Check className=\"mr-2 h-4 w-4\" />\r\n                Approve\r\n              </Button>\r\n            </DialogFooter>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1172, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/components/ui/input.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Input({\r\n  className,\r\n  type,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<input\r\n      type={type}\r\n      data-slot=\"input\"\r\n      className={cn(\r\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\r\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,SAAS,MAAM,EACb,SAAS,EACT,IAAI,EACJ,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAEf;KAjBS","debugId":null}},
    {"offset": {"line": 1206, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/actions/admin.js"],"sourcesContent":["\"use server\";\r\n\r\nimport { db } from \"@/lib/prisma\";\r\nimport { auth } from \"@clerk/nextjs/server\";\r\nimport { revalidatePath } from \"next/cache\";\r\n\r\n/**\r\n * Verifies if current user has admin role\r\n */\r\nexport async function verifyAdmin() {\r\n  const { userId } = await auth();\r\n\r\n  if (!userId) {\r\n    return false;\r\n  }\r\n\r\n  try {\r\n    const user = await db.user.findUnique({\r\n      where: {\r\n        clerkUserId: userId,\r\n      },\r\n    });\r\n\r\n    return user?.role === \"ADMIN\";\r\n  } catch (error) {\r\n    console.error(\"Failed to verify admin:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all doctors with pending verification\r\n */\r\nexport async function getPendingDoctors() {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  try {\r\n    const pendingDoctors = await db.user.findMany({\r\n      where: {\r\n        role: \"DOCTOR\",\r\n        verificationStatus: \"PENDING\",\r\n      },\r\n      orderBy: {\r\n        createdAt: \"desc\",\r\n      },\r\n    });\r\n\r\n    return { doctors: pendingDoctors };\r\n  } catch (error) {\r\n    throw new Error(\"Failed to fetch pending doctors\");\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all verified doctors\r\n */\r\nexport async function getVerifiedDoctors() {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  try {\r\n    const verifiedDoctors = await db.user.findMany({\r\n      where: {\r\n        role: \"DOCTOR\",\r\n        verificationStatus: \"VERIFIED\",\r\n      },\r\n      orderBy: {\r\n        name: \"asc\",\r\n      },\r\n    });\r\n\r\n    return { doctors: verifiedDoctors };\r\n  } catch (error) {\r\n    console.error(\"Failed to get verified doctors:\", error);\r\n    return { error: \"Failed to fetch verified doctors\" };\r\n  }\r\n}\r\n\r\n/**\r\n * Updates a doctor's verification status\r\n */\r\nexport async function updateDoctorStatus(formData) {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  const doctorId = formData.get(\"doctorId\");\r\n  const status = formData.get(\"status\");\r\n\r\n  if (!doctorId || ![\"VERIFIED\", \"REJECTED\"].includes(status)) {\r\n    throw new Error(\"Invalid input\");\r\n  }\r\n\r\n  try {\r\n    await db.user.update({\r\n      where: {\r\n        id: doctorId,\r\n      },\r\n      data: {\r\n        verificationStatus: status,\r\n      },\r\n    });\r\n\r\n    revalidatePath(\"/admin\");\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error(\"Failed to update doctor status:\", error);\r\n    throw new Error(`Failed to update doctor status: ${error.message}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Suspends or reinstates a doctor\r\n */\r\nexport async function updateDoctorActiveStatus(formData) {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  const doctorId = formData.get(\"doctorId\");\r\n  const suspend = formData.get(\"suspend\") === \"true\";\r\n\r\n  if (!doctorId) {\r\n    throw new Error(\"Doctor ID is required\");\r\n  }\r\n\r\n  try {\r\n    const status = suspend ? \"PENDING\" : \"VERIFIED\";\r\n\r\n    await db.user.update({\r\n      where: {\r\n        id: doctorId,\r\n      },\r\n      data: {\r\n        verificationStatus: status,\r\n      },\r\n    });\r\n\r\n    revalidatePath(\"/admin\");\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error(\"Failed to update doctor active status:\", error);\r\n    throw new Error(`Failed to update doctor status: ${error.message}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all pending payouts that need admin approval\r\n */\r\nexport async function getPendingPayouts() {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  try {\r\n    const pendingPayouts = await db.payout.findMany({\r\n      where: {\r\n        status: \"PROCESSING\",\r\n      },\r\n      include: {\r\n        doctor: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n            email: true,\r\n            specialty: true,\r\n            credits: true,\r\n          },\r\n        },\r\n      },\r\n      orderBy: {\r\n        createdAt: \"desc\",\r\n      },\r\n    });\r\n\r\n    return { payouts: pendingPayouts };\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch pending payouts:\", error);\r\n    throw new Error(\"Failed to fetch pending payouts\");\r\n  }\r\n}\r\n\r\n/**\r\n * Approves a payout request and deducts credits from doctor's account\r\n */\r\nexport async function approvePayout(formData) {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  const payoutId = formData.get(\"payoutId\");\r\n\r\n  if (!payoutId) {\r\n    throw new Error(\"Payout ID is required\");\r\n  }\r\n\r\n  try {\r\n    // Get admin user info\r\n    const { userId } = await auth();\r\n    const admin = await db.user.findUnique({\r\n      where: { clerkUserId: userId },\r\n    });\r\n\r\n    // Find the payout request\r\n    const payout = await db.payout.findUnique({\r\n      where: {\r\n        id: payoutId,\r\n        status: \"PROCESSING\",\r\n      },\r\n      include: {\r\n        doctor: true,\r\n      },\r\n    });\r\n\r\n    if (!payout) {\r\n      throw new Error(\"Payout request not found or already processed\");\r\n    }\r\n\r\n    // Check if doctor has enough credits\r\n    if (payout.doctor.credits < payout.credits) {\r\n      throw new Error(\"Doctor doesn't have enough credits for this payout\");\r\n    }\r\n\r\n    // Process the payout in a transaction\r\n    await db.$transaction(async (tx) => {\r\n      // Update payout status to PROCESSED\r\n      await tx.payout.update({\r\n        where: {\r\n          id: payoutId,\r\n        },\r\n        data: {\r\n          status: \"PROCESSED\",\r\n          processedAt: new Date(),\r\n          processedBy: admin?.id || \"unknown\",\r\n        },\r\n      });\r\n\r\n      // Deduct credits from doctor's account\r\n      await tx.user.update({\r\n        where: {\r\n          id: payout.doctorId,\r\n        },\r\n        data: {\r\n          credits: {\r\n            decrement: payout.credits,\r\n          },\r\n        },\r\n      });\r\n\r\n      // Create a transaction record for the deduction\r\n      await tx.creditTransaction.create({\r\n        data: {\r\n          userId: payout.doctorId,\r\n          amount: -payout.credits,\r\n          type: \"ADMIN_ADJUSTMENT\",\r\n        },\r\n      });\r\n    });\r\n\r\n    revalidatePath(\"/admin\");\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error(\"Failed to approve payout:\", error);\r\n    throw new Error(`Failed to approve payout: ${error.message}`);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;IAkHsB,2BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1222, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/app/%28main%29/admin/components/verified-doctors.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Check, Ban, Loader2, User, Search } from \"lucide-react\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { updateDoctorActiveStatus } from \"@/actions/admin\";\r\nimport useFetch from \"@/hooks/use-fetch\";\r\nimport { toast } from \"sonner\";\r\n\r\nexport function VerifiedDoctors({ doctors }) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [targetDoctor, setTargetDoctor] = useState(null);\r\n  const [actionType, setActionType] = useState(null);\r\n\r\n  const {\r\n    loading,\r\n    data,\r\n    fn: submitStatusUpdate,\r\n  } = useFetch(updateDoctorActiveStatus);\r\n\r\n  const filteredDoctors = doctors.filter((doctor) => {\r\n    const query = searchTerm.toLowerCase();\r\n    return (\r\n      doctor.name.toLowerCase().includes(query) ||\r\n      doctor.specialty.toLowerCase().includes(query) ||\r\n      doctor.email.toLowerCase().includes(query)\r\n    );\r\n  });\r\n\r\n  const handleStatusChange = async (doctor, suspend) => {\r\n    const confirmed = window.confirm(\r\n      `Are you sure you want to ${suspend ? \"suspend\" : \"reinstate\"} ${\r\n        doctor.name\r\n      }?`\r\n    );\r\n    if (!confirmed || loading) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"doctorId\", doctor.id);\r\n    formData.append(\"suspend\", suspend ? \"true\" : \"false\");\r\n\r\n    setTargetDoctor(doctor);\r\n    setActionType(suspend ? \"SUSPEND\" : \"REINSTATE\");\r\n\r\n    await submitStatusUpdate(formData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data?.success && targetDoctor && actionType) {\r\n      const actionVerb = actionType === \"SUSPEND\" ? \"Suspended\" : \"Reinstated\";\r\n      toast.success(`${actionVerb} ${targetDoctor.name} successfully!`);\r\n      setTargetDoctor(null);\r\n      setActionType(null);\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"bg-muted/20 border-emerald-900/20\">\r\n        <CardHeader>\r\n          <div className=\"flex flex-col md:flex-row md:items-center justify-between gap-4\">\r\n            <div>\r\n              <CardTitle className=\"text-xl font-bold text-white\">\r\n                Manage Doctors\r\n              </CardTitle>\r\n              <CardDescription>\r\n                View and manage all verified doctors\r\n              </CardDescription>\r\n            </div>\r\n            <div className=\"relative w-full md:w-64\">\r\n              <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\r\n              <Input\r\n                placeholder=\"Search doctors...\"\r\n                className=\"pl-8 bg-background border-emerald-900/20\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n\r\n        <CardContent>\r\n          {filteredDoctors.length === 0 ? (\r\n            <div className=\"text-center py-8 text-muted-foreground\">\r\n              {searchTerm\r\n                ? \"No doctors match your search criteria.\"\r\n                : \"No verified doctors available.\"}\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-4\">\r\n              {filteredDoctors.map((doctor) => {\r\n                const isSuspended = doctor.verificationStatus === \"REJECTED\";\r\n                return (\r\n                  <Card\r\n                    key={doctor.id}\r\n                    className=\"bg-background border-emerald-900/20 hover:border-emerald-700/30 transition-all\"\r\n                  >\r\n                    <CardContent className=\"p-4\">\r\n                      <div className=\"flex flex-col md:flex-row md:items-center justify-between gap-4\">\r\n                        <div className=\"flex items-center gap-3\">\r\n                          <div className=\"bg-muted/20 rounded-full p-2\">\r\n                            <User className=\"h-5 w-5 text-emerald-400\" />\r\n                          </div>\r\n                          <div>\r\n                            <h3 className=\"font-medium text-white\">\r\n                              {doctor.name}\r\n                            </h3>\r\n                            <p className=\"text-sm text-muted-foreground\">\r\n                              {doctor.specialty} • {doctor.experience} years\r\n                              experience\r\n                            </p>\r\n                            <p className=\"text-sm text-muted-foreground mt-1\">\r\n                              {doctor.email}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-2 self-end md:self-auto\">\r\n                          {isSuspended ? (\r\n                            <>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className=\"bg-red-900/20 border-red-900/30 text-red-400\"\r\n                              >\r\n                                Suspended\r\n                              </Badge>\r\n                              <Button\r\n                                variant=\"outline\"\r\n                                size=\"sm\"\r\n                                onClick={() =>\r\n                                  handleStatusChange(doctor, false)\r\n                                }\r\n                                disabled={loading}\r\n                                className=\"border-emerald-900/30 hover:bg-muted/80\"\r\n                              >\r\n                                {loading && targetDoctor?.id === doctor.id ? (\r\n                                  <Loader2 className=\"h-4 w-4 mr-1 animate-spin\" />\r\n                                ) : (\r\n                                  <Check className=\"h-4 w-4 mr-1\" />\r\n                                )}\r\n                                Reinstate\r\n                              </Button>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className=\"bg-emerald-900/20 border-emerald-900/30 text-emerald-400\"\r\n                              >\r\n                                Active\r\n                              </Badge>\r\n                              <Button\r\n                                variant=\"outline\"\r\n                                size=\"sm\"\r\n                                onClick={() => handleStatusChange(doctor, true)}\r\n                                disabled={loading}\r\n                                className=\"border-red-900/30 hover:bg-red-900/10 text-red-400\"\r\n                              >\r\n                                {loading && targetDoctor?.id === doctor.id ? (\r\n                                  <Loader2 className=\"h-4 w-4 mr-1 animate-spin\" />\r\n                                ) : (\r\n                                  <Ban className=\"h-4 w-4 mr-1\" />\r\n                                )}\r\n                                Suspend\r\n                              </Button>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1572, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/components/ui/alert.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst alertVariants = cva(\r\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-card text-card-foreground\",\r\n        destructive:\r\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Alert({\r\n  className,\r\n  variant,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"alert\"\r\n      role=\"alert\"\r\n      className={cn(alertVariants({ variant }), className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction AlertTitle({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"alert-title\"\r\n      className={cn(\"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction AlertDescription({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"alert-description\"\r\n      className={cn(\r\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Alert, AlertTitle, AlertDescription }\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAEf;KAZS;AAcT,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,+DAA+D;QAC5E,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,6LAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS","debugId":null}},
    {"offset": {"line": 1649, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/actions/admin.js"],"sourcesContent":["\"use server\";\r\n\r\nimport { db } from \"@/lib/prisma\";\r\nimport { auth } from \"@clerk/nextjs/server\";\r\nimport { revalidatePath } from \"next/cache\";\r\n\r\n/**\r\n * Verifies if current user has admin role\r\n */\r\nexport async function verifyAdmin() {\r\n  const { userId } = await auth();\r\n\r\n  if (!userId) {\r\n    return false;\r\n  }\r\n\r\n  try {\r\n    const user = await db.user.findUnique({\r\n      where: {\r\n        clerkUserId: userId,\r\n      },\r\n    });\r\n\r\n    return user?.role === \"ADMIN\";\r\n  } catch (error) {\r\n    console.error(\"Failed to verify admin:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all doctors with pending verification\r\n */\r\nexport async function getPendingDoctors() {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  try {\r\n    const pendingDoctors = await db.user.findMany({\r\n      where: {\r\n        role: \"DOCTOR\",\r\n        verificationStatus: \"PENDING\",\r\n      },\r\n      orderBy: {\r\n        createdAt: \"desc\",\r\n      },\r\n    });\r\n\r\n    return { doctors: pendingDoctors };\r\n  } catch (error) {\r\n    throw new Error(\"Failed to fetch pending doctors\");\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all verified doctors\r\n */\r\nexport async function getVerifiedDoctors() {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  try {\r\n    const verifiedDoctors = await db.user.findMany({\r\n      where: {\r\n        role: \"DOCTOR\",\r\n        verificationStatus: \"VERIFIED\",\r\n      },\r\n      orderBy: {\r\n        name: \"asc\",\r\n      },\r\n    });\r\n\r\n    return { doctors: verifiedDoctors };\r\n  } catch (error) {\r\n    console.error(\"Failed to get verified doctors:\", error);\r\n    return { error: \"Failed to fetch verified doctors\" };\r\n  }\r\n}\r\n\r\n/**\r\n * Updates a doctor's verification status\r\n */\r\nexport async function updateDoctorStatus(formData) {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  const doctorId = formData.get(\"doctorId\");\r\n  const status = formData.get(\"status\");\r\n\r\n  if (!doctorId || ![\"VERIFIED\", \"REJECTED\"].includes(status)) {\r\n    throw new Error(\"Invalid input\");\r\n  }\r\n\r\n  try {\r\n    await db.user.update({\r\n      where: {\r\n        id: doctorId,\r\n      },\r\n      data: {\r\n        verificationStatus: status,\r\n      },\r\n    });\r\n\r\n    revalidatePath(\"/admin\");\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error(\"Failed to update doctor status:\", error);\r\n    throw new Error(`Failed to update doctor status: ${error.message}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Suspends or reinstates a doctor\r\n */\r\nexport async function updateDoctorActiveStatus(formData) {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  const doctorId = formData.get(\"doctorId\");\r\n  const suspend = formData.get(\"suspend\") === \"true\";\r\n\r\n  if (!doctorId) {\r\n    throw new Error(\"Doctor ID is required\");\r\n  }\r\n\r\n  try {\r\n    const status = suspend ? \"PENDING\" : \"VERIFIED\";\r\n\r\n    await db.user.update({\r\n      where: {\r\n        id: doctorId,\r\n      },\r\n      data: {\r\n        verificationStatus: status,\r\n      },\r\n    });\r\n\r\n    revalidatePath(\"/admin\");\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error(\"Failed to update doctor active status:\", error);\r\n    throw new Error(`Failed to update doctor status: ${error.message}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all pending payouts that need admin approval\r\n */\r\nexport async function getPendingPayouts() {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  try {\r\n    const pendingPayouts = await db.payout.findMany({\r\n      where: {\r\n        status: \"PROCESSING\",\r\n      },\r\n      include: {\r\n        doctor: {\r\n          select: {\r\n            id: true,\r\n            name: true,\r\n            email: true,\r\n            specialty: true,\r\n            credits: true,\r\n          },\r\n        },\r\n      },\r\n      orderBy: {\r\n        createdAt: \"desc\",\r\n      },\r\n    });\r\n\r\n    return { payouts: pendingPayouts };\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch pending payouts:\", error);\r\n    throw new Error(\"Failed to fetch pending payouts\");\r\n  }\r\n}\r\n\r\n/**\r\n * Approves a payout request and deducts credits from doctor's account\r\n */\r\nexport async function approvePayout(formData) {\r\n  const isAdmin = await verifyAdmin();\r\n  if (!isAdmin) throw new Error(\"Unauthorized\");\r\n\r\n  const payoutId = formData.get(\"payoutId\");\r\n\r\n  if (!payoutId) {\r\n    throw new Error(\"Payout ID is required\");\r\n  }\r\n\r\n  try {\r\n    // Get admin user info\r\n    const { userId } = await auth();\r\n    const admin = await db.user.findUnique({\r\n      where: { clerkUserId: userId },\r\n    });\r\n\r\n    // Find the payout request\r\n    const payout = await db.payout.findUnique({\r\n      where: {\r\n        id: payoutId,\r\n        status: \"PROCESSING\",\r\n      },\r\n      include: {\r\n        doctor: true,\r\n      },\r\n    });\r\n\r\n    if (!payout) {\r\n      throw new Error(\"Payout request not found or already processed\");\r\n    }\r\n\r\n    // Check if doctor has enough credits\r\n    if (payout.doctor.credits < payout.credits) {\r\n      throw new Error(\"Doctor doesn't have enough credits for this payout\");\r\n    }\r\n\r\n    // Process the payout in a transaction\r\n    await db.$transaction(async (tx) => {\r\n      // Update payout status to PROCESSED\r\n      await tx.payout.update({\r\n        where: {\r\n          id: payoutId,\r\n        },\r\n        data: {\r\n          status: \"PROCESSED\",\r\n          processedAt: new Date(),\r\n          processedBy: admin?.id || \"unknown\",\r\n        },\r\n      });\r\n\r\n      // Deduct credits from doctor's account\r\n      await tx.user.update({\r\n        where: {\r\n          id: payout.doctorId,\r\n        },\r\n        data: {\r\n          credits: {\r\n            decrement: payout.credits,\r\n          },\r\n        },\r\n      });\r\n\r\n      // Create a transaction record for the deduction\r\n      await tx.creditTransaction.create({\r\n        data: {\r\n          userId: payout.doctorId,\r\n          amount: -payout.credits,\r\n          type: \"ADMIN_ADJUSTMENT\",\r\n        },\r\n      });\r\n    });\r\n\r\n    revalidatePath(\"/admin\");\r\n    return { success: true };\r\n  } catch (error) {\r\n    console.error(\"Failed to approve payout:\", error);\r\n    throw new Error(`Failed to approve payout: ${error.message}`);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;IAuLsB,gBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1665, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/app/%28main%29/admin/components/pending-payouts.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Check,\r\n  User,\r\n  DollarSign,\r\n  Mail,\r\n  Stethoscope,\r\n  Loader2,\r\n  AlertCircle,\r\n} from \"lucide-react\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { format } from \"date-fns\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from \"@/components/ui/dialog\";\r\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\r\nimport { approvePayout } from \"@/actions/admin\";\r\nimport useFetch from \"@/hooks/use-fetch\";\r\nimport { toast } from \"sonner\";\r\nimport { BarLoader } from \"react-spinners\";\r\n\r\nexport function PendingPayouts({ payouts }) {\r\n  const [selectedPayout, setSelectedPayout] = useState(null);\r\n  const [showApproveDialog, setShowApproveDialog] = useState(false);\r\n\r\n  // Custom hook for approve payout server action\r\n  const { loading, data, fn: submitApproval } = useFetch(approvePayout);\r\n\r\n  // Handle view details\r\n  const handleViewDetails = (payout) => {\r\n    setSelectedPayout(payout);\r\n  };\r\n\r\n  // Handle approve payout\r\n  const handleApprovePayout = (payout) => {\r\n    setSelectedPayout(payout);\r\n    setShowApproveDialog(true);\r\n  };\r\n\r\n  // Confirm approval\r\n  const confirmApproval = async () => {\r\n    if (!selectedPayout || loading) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"payoutId\", selectedPayout.id);\r\n\r\n    await submitApproval(formData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data?.success) {\r\n      setShowApproveDialog(false);\r\n      setSelectedPayout(null);\r\n      toast.success(\"Payout approved successfully!\");\r\n    }\r\n  }, [data]);\r\n\r\n  const closeDialogs = () => {\r\n    setSelectedPayout(null);\r\n    setShowApproveDialog(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"bg-muted/20 border-emerald-900/20\">\r\n        <CardHeader>\r\n          <CardTitle className=\"text-xl font-bold text-white\">\r\n            Pending Payouts\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Review and approve doctor payout requests\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {payouts.length === 0 ? (\r\n            <div className=\"text-center py-8 text-muted-foreground\">\r\n              No pending payout requests at this time.\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-4\">\r\n              {payouts.map((payout) => (\r\n                <Card\r\n                  key={payout.id}\r\n                  className=\"bg-background border-emerald-900/20 hover:border-emerald-700/30 transition-all\"\r\n                >\r\n                  <CardContent className=\"p-4\">\r\n                    <div className=\"flex flex-col lg:flex-row lg:items-center justify-between gap-4\">\r\n                      <div className=\"flex items-start gap-3\">\r\n                        <div className=\"bg-muted/20 rounded-full p-2 mt-1\">\r\n                          <User className=\"h-5 w-5 text-emerald-400\" />\r\n                        </div>\r\n                        <div className=\"flex-1\">\r\n                          <h3 className=\"font-medium text-white\">\r\n                            Dr. {payout.doctor.name}\r\n                          </h3>\r\n                          <p className=\"text-sm text-muted-foreground\">\r\n                            {payout.doctor.specialty}\r\n                          </p>\r\n                          <div className=\"flex flex-wrap items-center gap-4 mt-2 text-sm text-muted-foreground\">\r\n                            <div className=\"flex items-center\">\r\n                              <DollarSign className=\"h-4 w-4 mr-1 text-emerald-400\" />\r\n                              <span>\r\n                                {payout.credits} credits • $\r\n                                {payout.netAmount.toFixed(2)}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"flex items-center\">\r\n                              <Mail className=\"h-4 w-4 mr-1 text-emerald-400\" />\r\n                              <span className=\"text-xs\">\r\n                                {payout.paypalEmail}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <p className=\"text-xs text-muted-foreground mt-1\">\r\n                            Requested{\" \"}\r\n                            {format(\r\n                              new Date(payout.createdAt),\r\n                              \"MMM d, yyyy 'at' h:mm a\"\r\n                            )}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex flex-col sm:flex-row gap-2 self-end lg:self-center\">\r\n                        <Badge\r\n                          variant=\"outline\"\r\n                          className=\"bg-amber-900/20 border-amber-900/30 text-amber-400 w-fit\"\r\n                        >\r\n                          Pending\r\n                        </Badge>\r\n                        <div className=\"flex gap-2\">\r\n                          <Button\r\n                            variant=\"outline\"\r\n                            size=\"sm\"\r\n                            onClick={() => handleViewDetails(payout)}\r\n                            className=\"border-emerald-900/30 hover:bg-muted/80\"\r\n                          >\r\n                            View Details\r\n                          </Button>\r\n                          <Button\r\n                            size=\"sm\"\r\n                            onClick={() => handleApprovePayout(payout)}\r\n                            className=\"bg-emerald-600 hover:bg-emerald-700\"\r\n                          >\r\n                            <Check className=\"h-4 w-4 mr-1\" />\r\n                            Approve\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Payout Details Dialog */}\r\n      {selectedPayout && !showApproveDialog && (\r\n        <Dialog open={!!selectedPayout} onOpenChange={closeDialogs}>\r\n          <DialogContent className=\"max-w-2xl\">\r\n            <DialogHeader>\r\n              <DialogTitle className=\"text-xl font-bold text-white\">\r\n                Payout Request Details\r\n              </DialogTitle>\r\n              <DialogDescription>\r\n                Review the payout request information\r\n              </DialogDescription>\r\n            </DialogHeader>\r\n\r\n            <div className=\"space-y-6 py-4\">\r\n              {/* Doctor Information */}\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Stethoscope className=\"h-5 w-5 text-emerald-400\" />\r\n                  <h3 className=\"text-white font-medium\">Doctor Information</h3>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-muted-foreground\">\r\n                      Name\r\n                    </p>\r\n                    <p className=\"text-white\">\r\n                      Dr. {selectedPayout.doctor.name}\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-muted-foreground\">\r\n                      Email\r\n                    </p>\r\n                    <p className=\"text-white\">{selectedPayout.doctor.email}</p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-muted-foreground\">\r\n                      Specialty\r\n                    </p>\r\n                    <p className=\"text-white\">\r\n                      {selectedPayout.doctor.specialty}\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-muted-foreground\">\r\n                      Current Credits\r\n                    </p>\r\n                    <p className=\"text-white\">\r\n                      {selectedPayout.doctor.credits}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Payout Information */}\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <DollarSign className=\"h-5 w-5 text-emerald-400\" />\r\n                  <h3 className=\"text-white font-medium\">Payout Details</h3>\r\n                </div>\r\n                <div className=\"bg-muted/20 p-4 rounded-lg border border-emerald-900/20 space-y-3\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-muted-foreground\">\r\n                      Credits to pay out:\r\n                    </span>\r\n                    <span className=\"text-white font-medium\">\r\n                      {selectedPayout.credits}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-muted-foreground\">\r\n                      Gross amount (10 USD/credit):\r\n                    </span>\r\n                    <span className=\"text-white\">\r\n                      ${selectedPayout.amount.toFixed(2)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-muted-foreground\">\r\n                      Platform fee (2 USD/credit):\r\n                    </span>\r\n                    <span className=\"text-white\">\r\n                      -${selectedPayout.platformFee.toFixed(2)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"border-t border-emerald-900/20 pt-3 flex justify-between font-medium\">\r\n                    <span className=\"text-white\">Net payout:</span>\r\n                    <span className=\"text-emerald-400\">\r\n                      ${selectedPayout.netAmount.toFixed(2)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"border-t border-emerald-900/20 pt-3\">\r\n                    <p className=\"text-sm font-medium text-muted-foreground\">\r\n                      PayPal Email\r\n                    </p>\r\n                    <p className=\"text-white\">{selectedPayout.paypalEmail}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Warning if insufficient credits */}\r\n              {selectedPayout.doctor.credits < selectedPayout.credits && (\r\n                <Alert variant=\"destructive\">\r\n                  <AlertCircle className=\"h-4 w-4\" />\r\n                  <AlertDescription>\r\n                    Warning: Doctor currently has only{\" \"}\r\n                    {selectedPayout.doctor.credits} credits but this payout\r\n                    requires {selectedPayout.credits} credits. The payout cannot\r\n                    be processed.\r\n                  </AlertDescription>\r\n                </Alert>\r\n              )}\r\n            </div>\r\n\r\n            <DialogFooter>\r\n              <Button\r\n                variant=\"outline\"\r\n                onClick={closeDialogs}\r\n                className=\"border-emerald-900/30\"\r\n              >\r\n                Close\r\n              </Button>\r\n              <Button\r\n                onClick={() => handleApprovePayout(selectedPayout)}\r\n                disabled={\r\n                  selectedPayout.doctor.credits < selectedPayout.credits\r\n                }\r\n                className=\"bg-emerald-600 hover:bg-emerald-700\"\r\n              >\r\n                <Check className=\"h-4 w-4 mr-1\" />\r\n                Approve Payout\r\n              </Button>\r\n            </DialogFooter>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n\r\n      {/* Approval Confirmation Dialog */}\r\n      {showApproveDialog && selectedPayout && (\r\n        <Dialog\r\n          open={showApproveDialog}\r\n          onOpenChange={() => setShowApproveDialog(false)}\r\n        >\r\n          <DialogContent>\r\n            <DialogHeader>\r\n              <DialogTitle className=\"text-xl font-bold text-white\">\r\n                Confirm Payout Approval\r\n              </DialogTitle>\r\n              <DialogDescription>\r\n                Are you sure you want to approve this payout?\r\n              </DialogDescription>\r\n            </DialogHeader>\r\n\r\n            <div className=\"space-y-4 py-4\">\r\n              <Alert>\r\n                <AlertCircle className=\"h-4 w-4\" />\r\n                <AlertDescription>\r\n                  This action will:\r\n                  <ul className=\"mt-2 space-y-1 list-disc pl-4\">\r\n                    <li>\r\n                      Deduct {selectedPayout.credits} credits from Dr.{\" \"}\r\n                      {selectedPayout.doctor.name}'s account\r\n                    </li>\r\n                    <li>Mark the payout as PROCESSED</li>\r\n                    <li>This action cannot be undone</li>\r\n                  </ul>\r\n                </AlertDescription>\r\n              </Alert>\r\n\r\n              <div className=\"bg-muted/20 p-4 rounded-lg border border-emerald-900/20\">\r\n                <div className=\"flex justify-between mb-2\">\r\n                  <span className=\"text-muted-foreground\">Doctor:</span>\r\n                  <span className=\"text-white\">\r\n                    Dr. {selectedPayout.doctor.name}\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex justify-between mb-2\">\r\n                  <span className=\"text-muted-foreground\">Amount to pay:</span>\r\n                  <span className=\"text-emerald-400 font-medium\">\r\n                    ${selectedPayout.netAmount.toFixed(2)}\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-muted-foreground\">PayPal:</span>\r\n                  <span className=\"text-white text-sm\">\r\n                    {selectedPayout.paypalEmail}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {loading && <BarLoader width={\"100%\"} color=\"#36d7b7\" />}\r\n\r\n            <DialogFooter>\r\n              <Button\r\n                variant=\"outline\"\r\n                onClick={() => setShowApproveDialog(false)}\r\n                disabled={loading}\r\n                className=\"border-emerald-900/30\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={confirmApproval}\r\n                disabled={loading}\r\n                className=\"bg-emerald-600 hover:bg-emerald-700\"\r\n              >\r\n                {loading ? (\r\n                  <>\r\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                    Processing...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Check className=\"mr-2 h-4 w-4\" />\r\n                    Confirm Approval\r\n                  </>\r\n                )}\r\n              </Button>\r\n            </DialogFooter>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}