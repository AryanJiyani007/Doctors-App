{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/lib/utils.js"],"sourcesContent":["import { clsx } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAM;IAC1B,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/components/ui/button.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    (<Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OACJ;IACC,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/components/ui/card.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction CardHeader({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction CardTitle({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction CardDescription({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction CardAction({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction CardContent({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (<div data-slot=\"card-content\" className={cn(\"px-6\", className)} {...props} />);\r\n}\r\n\r\nfunction CardFooter({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AAEA;;;;AAEA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,UAAU,EACjB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBAAQ,8OAAC;QAAI,aAAU;QAAe,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QAAa,GAAG,KAAK;;;;;;AACnF;AAEA,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/components/ui/separator.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Separator({\r\n  className,\r\n  orientation = \"horizontal\",\r\n  decorative = true,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<SeparatorPrimitive.Root\r\n      data-slot=\"separator-root\"\r\n      decorative={decorative}\r\n      orientation={orientation}\r\n      className={cn(\r\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Separator }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACJ;IACC,qBACG,8OAAC,qKAAA,CAAA,OAAuB;QACvB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/components/ui/badge.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Badge({\r\n  className,\r\n  variant,\r\n  asChild = false,\r\n  ...props\r\n}) {\r\n  const Comp = asChild ? Slot : \"span\"\r\n\r\n  return (\r\n    (<Comp\r\n      data-slot=\"badge\"\r\n      className={cn(badgeVariants({ variant }), className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OACJ;IACC,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/components/ui/tabs.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Tabs({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<TabsPrimitive.Root\r\n      data-slot=\"tabs\"\r\n      className={cn(\"flex flex-col gap-2\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction TabsList({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<TabsPrimitive.List\r\n      data-slot=\"tabs-list\"\r\n      className={cn(\r\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction TabsTrigger({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<TabsPrimitive.Trigger\r\n      data-slot=\"tabs-trigger\"\r\n      className={cn(\r\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction TabsContent({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<TabsPrimitive.Content\r\n      data-slot=\"tabs-content\"\r\n      className={cn(\"flex-1 outline-none\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC,gKAAA,CAAA,OAAkB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC,gKAAA,CAAA,OAAkB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC,gKAAA,CAAA,UAAqB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC,gKAAA,CAAA,UAAqB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/app/%28main%29/doctors/%5Bspecialty%5D/%5Bid%5D/_components/slot-picker.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Clock, ChevronRight } from \"lucide-react\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\n\r\nexport function SlotPicker({ days, onSelectSlot }) {\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n\r\n  // Find first day with slots as default tab\r\n  const firstDayWithSlots =\r\n    days.find((day) => day.slots.length > 0)?.date || days[0]?.date;\r\n  const [activeTab, setActiveTab] = useState(firstDayWithSlots);\r\n\r\n  const handleSlotSelect = (slot) => {\r\n    setSelectedSlot(slot);\r\n  };\r\n\r\n  const confirmSelection = () => {\r\n    if (selectedSlot) {\r\n      onSelectSlot(selectedSlot);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <Tabs\r\n        defaultValue={activeTab}\r\n        onValueChange={setActiveTab}\r\n        className=\"w-full\"\r\n      >\r\n        <TabsList className=\"w-full justify-start overflow-x-auto\">\r\n          {days.map((day) => (\r\n            <TabsTrigger\r\n              key={day.date}\r\n              value={day.date}\r\n              disabled={day.slots.length === 0}\r\n              className={\r\n                day.slots.length === 0 ? \"opacity-50 cursor-not-allowed\" : \"\"\r\n              }\r\n            >\r\n              <div className=\"flex gap-2\">\r\n                <div className=\" opacity-80\">\r\n                  {format(new Date(day.date), \"MMM d\")}\r\n                </div>\r\n                <div>({format(new Date(day.date), \"EEE\")})</div>\r\n              </div>\r\n              {day.slots.length > 0 && (\r\n                <div className=\"ml-2 bg-emerald-900/30 text-emerald-400 text-xs px-2 py-1 rounded\">\r\n                  {day.slots.length}\r\n                </div>\r\n              )}\r\n            </TabsTrigger>\r\n          ))}\r\n        </TabsList>\r\n\r\n        {days.map((day) => (\r\n          <TabsContent key={day.date} value={day.date} className=\"pt-4\">\r\n            {day.slots.length === 0 ? (\r\n              <div className=\"text-center py-8 text-muted-foreground\">\r\n                No available slots for this day.\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-3\">\r\n                <h3 className=\"text-lg font-medium text-white mb-2\">\r\n                  {day.displayDate}\r\n                </h3>\r\n                <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2\">\r\n                  {day.slots.map((slot) => (\r\n                    <Card\r\n                      key={slot.startTime}\r\n                      className={`border-emerald-900/20 cursor-pointer transition-all ${\r\n                        selectedSlot?.startTime === slot.startTime\r\n                          ? \"bg-emerald-900/30 border-emerald-600\"\r\n                          : \"hover:border-emerald-700/40\"\r\n                      }`}\r\n                      onClick={() => handleSlotSelect(slot)}\r\n                    >\r\n                      <CardContent className=\"p-3 flex items-center\">\r\n                        <Clock\r\n                          className={`h-4 w-4 mr-2 ${\r\n                            selectedSlot?.startTime === slot.startTime\r\n                              ? \"text-emerald-400\"\r\n                              : \"text-muted-foreground\"\r\n                          }`}\r\n                        />\r\n                        <span\r\n                          className={\r\n                            selectedSlot?.startTime === slot.startTime\r\n                              ? \"text-white\"\r\n                              : \"text-muted-foreground\"\r\n                          }\r\n                        >\r\n                          {format(new Date(slot.startTime), \"h:mm a\")}\r\n                        </span>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </TabsContent>\r\n        ))}\r\n      </Tabs>\r\n\r\n      <div className=\"flex justify-end\">\r\n        <Button\r\n          onClick={confirmSelection}\r\n          disabled={!selectedSlot}\r\n          className=\"bg-emerald-600 hover:bg-emerald-700\"\r\n        >\r\n          Continue\r\n          <ChevronRight className=\"ml-2 h-4 w-4\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAPA;;;;;;;;AASO,SAAS,WAAW,EAAE,IAAI,EAAE,YAAY,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,2CAA2C;IAC3C,MAAM,oBACJ,KAAK,IAAI,CAAC,CAAC,MAAQ,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,QAAQ,IAAI,CAAC,EAAE,EAAE;IAC7D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,mBAAmB,CAAC;QACxB,gBAAgB;IAClB;IAEA,MAAM,mBAAmB;QACvB,IAAI,cAAc;YAChB,aAAa;QACf;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,yHAAA,CAAA,OAAI;gBACH,cAAc;gBACd,eAAe;gBACf,WAAU;;kCAEV,8OAAC,yHAAA,CAAA,WAAQ;wBAAC,WAAU;kCACjB,KAAK,GAAG,CAAC,CAAC,oBACT,8OAAC,yHAAA,CAAA,cAAW;gCAEV,OAAO,IAAI,IAAI;gCACf,UAAU,IAAI,KAAK,CAAC,MAAM,KAAK;gCAC/B,WACE,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,kCAAkC;;kDAG7D,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DACZ,CAAA,GAAA,qJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,IAAI,IAAI,GAAG;;;;;;0DAE9B,8OAAC;;oDAAI;oDAAE,CAAA,GAAA,qJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,IAAI,IAAI,GAAG;oDAAO;;;;;;;;;;;;;oCAE1C,IAAI,KAAK,CAAC,MAAM,GAAG,mBAClB,8OAAC;wCAAI,WAAU;kDACZ,IAAI,KAAK,CAAC,MAAM;;;;;;;+BAfhB,IAAI,IAAI;;;;;;;;;;oBAsBlB,KAAK,GAAG,CAAC,CAAC,oBACT,8OAAC,yHAAA,CAAA,cAAW;4BAAgB,OAAO,IAAI,IAAI;4BAAE,WAAU;sCACpD,IAAI,KAAK,CAAC,MAAM,KAAK,kBACpB,8OAAC;gCAAI,WAAU;0CAAyC;;;;;qDAIxD,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;kDACX,IAAI,WAAW;;;;;;kDAElB,8OAAC;wCAAI,WAAU;kDACZ,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,qBACd,8OAAC,yHAAA,CAAA,OAAI;gDAEH,WAAW,CAAC,oDAAoD,EAC9D,cAAc,cAAc,KAAK,SAAS,GACtC,yCACA,+BACJ;gDACF,SAAS,IAAM,iBAAiB;0DAEhC,cAAA,8OAAC,yHAAA,CAAA,cAAW;oDAAC,WAAU;;sEACrB,8OAAC,oMAAA,CAAA,QAAK;4DACJ,WAAW,CAAC,aAAa,EACvB,cAAc,cAAc,KAAK,SAAS,GACtC,qBACA,yBACJ;;;;;;sEAEJ,8OAAC;4DACC,WACE,cAAc,cAAc,KAAK,SAAS,GACtC,eACA;sEAGL,CAAA,GAAA,qJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,KAAK,SAAS,GAAG;;;;;;;;;;;;+CAvBjC,KAAK,SAAS;;;;;;;;;;;;;;;;2BAbb,IAAI,IAAI;;;;;;;;;;;0BAgD9B,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,2HAAA,CAAA,SAAM;oBACL,SAAS;oBACT,UAAU,CAAC;oBACX,WAAU;;wBACX;sCAEC,8OAAC,sNAAA,CAAA,eAAY;4BAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAKlC","debugId":null}},
    {"offset": {"line": 537, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/components/ui/textarea.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Textarea({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<textarea\r\n      data-slot=\"textarea\"\r\n      className={cn(\r\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Textarea }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 564, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/components/ui/label.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Label({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<LabelPrimitive.Root\r\n      data-slot=\"label\"\r\n      className={cn(\r\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC,iKAAA,CAAA,OAAmB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 594, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/actions/appointments.js"],"sourcesContent":["\"use server\";\r\n\r\nimport { db } from \"@/lib/prisma\";\r\nimport { auth } from \"@clerk/nextjs/server\";\r\nimport { revalidatePath } from \"next/cache\";\r\nimport { deductCreditsForAppointment } from \"@/actions/credits\";\r\nimport { Vonage } from \"@vonage/server-sdk\";\r\nimport { addDays, addMinutes, format, isBefore, endOfDay } from \"date-fns\";\r\nimport { Auth } from \"@vonage/auth\";\r\n\r\n// Initialize Vonage Video API client\r\nconst credentials = new Auth({\r\n  applicationId: process.env.NEXT_PUBLIC_VONAGE_APPLICATION_ID,\r\n  privateKey: process.env.VONAGE_PRIVATE_KEY,\r\n});\r\nconst options = {};\r\nconst vonage = new Vonage(credentials, options);\r\n\r\n/**\r\n * Book a new appointment with a doctor\r\n */\r\nexport async function bookAppointment(formData) {\r\n  const { userId } = await auth();\r\n\r\n  if (!userId) {\r\n    throw new Error(\"Unauthorized\");\r\n  }\r\n\r\n  try {\r\n    // Get the patient user\r\n    const patient = await db.user.findUnique({\r\n      where: {\r\n        clerkUserId: userId,\r\n        role: \"PATIENT\",\r\n      },\r\n    });\r\n\r\n    if (!patient) {\r\n      throw new Error(\"Patient not found\");\r\n    }\r\n\r\n    // Parse form data\r\n    const doctorId = formData.get(\"doctorId\");\r\n    const startTime = new Date(formData.get(\"startTime\"));\r\n    const endTime = new Date(formData.get(\"endTime\"));\r\n    const patientDescription = formData.get(\"description\") || null;\r\n\r\n    // Validate input\r\n    if (!doctorId || !startTime || !endTime) {\r\n      throw new Error(\"Doctor, start time, and end time are required\");\r\n    }\r\n\r\n    // Check if the doctor exists and is verified\r\n    const doctor = await db.user.findUnique({\r\n      where: {\r\n        id: doctorId,\r\n        role: \"DOCTOR\",\r\n        verificationStatus: \"VERIFIED\",\r\n      },\r\n    });\r\n\r\n    if (!doctor) {\r\n      throw new Error(\"Doctor not found or not verified\");\r\n    }\r\n\r\n    // Check if the patient has enough credits (2 credits per appointment)\r\n    if (patient.credits < 2) {\r\n      throw new Error(\"Insufficient credits to book an appointment\");\r\n    }\r\n\r\n    // Check if the requested time slot is available\r\n    const overlappingAppointment = await db.appointment.findFirst({\r\n      where: {\r\n        doctorId: doctorId,\r\n        status: \"SCHEDULED\",\r\n        OR: [\r\n          {\r\n            // New appointment starts during an existing appointment\r\n            startTime: {\r\n              lte: startTime,\r\n            },\r\n            endTime: {\r\n              gt: startTime,\r\n            },\r\n          },\r\n          {\r\n            // New appointment ends during an existing appointment\r\n            startTime: {\r\n              lt: endTime,\r\n            },\r\n            endTime: {\r\n              gte: endTime,\r\n            },\r\n          },\r\n          {\r\n            // New appointment completely overlaps an existing appointment\r\n            startTime: {\r\n              gte: startTime,\r\n            },\r\n            endTime: {\r\n              lte: endTime,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    });\r\n\r\n    if (overlappingAppointment) {\r\n      throw new Error(\"This time slot is already booked\");\r\n    }\r\n\r\n    // Create a new Vonage Video API session\r\n    const sessionId = await createVideoSession();\r\n\r\n    // Deduct credits from patient and add to doctor\r\n    const { success, error } = await deductCreditsForAppointment(\r\n      patient.id,\r\n      doctor.id\r\n    );\r\n\r\n    if (!success) {\r\n      throw new Error(error || \"Failed to deduct credits\");\r\n    }\r\n\r\n    // Create the appointment with the video session ID\r\n    const appointment = await db.appointment.create({\r\n      data: {\r\n        patientId: patient.id,\r\n        doctorId: doctor.id,\r\n        startTime,\r\n        endTime,\r\n        patientDescription,\r\n        status: \"SCHEDULED\",\r\n        videoSessionId: sessionId, // Store the Vonage session ID\r\n      },\r\n    });\r\n\r\n    revalidatePath(\"/appointments\");\r\n    return { success: true, appointment: appointment };\r\n  } catch (error) {\r\n    console.error(\"Failed to book appointment:\", error);\r\n    throw new Error(\"Failed to book appointment:\" + error.message);\r\n  }\r\n}\r\n\r\n/**\r\n * Generate a Vonage Video API session\r\n */\r\nasync function createVideoSession() {\r\n  try {\r\n    const session = await vonage.video.createSession({ mediaMode: \"routed\" });\r\n    return session.sessionId;\r\n  } catch (error) {\r\n    throw new Error(\"Failed to create video session: \" + error.message);\r\n  }\r\n}\r\n\r\n/**\r\n * Generate a token for a video session\r\n * This will be called when either doctor or patient is about to join the call\r\n */\r\nexport async function generateVideoToken(formData) {\r\n  const { userId } = await auth();\r\n\r\n  if (!userId) {\r\n    throw new Error(\"Unauthorized\");\r\n  }\r\n\r\n  try {\r\n    const user = await db.user.findUnique({\r\n      where: {\r\n        clerkUserId: userId,\r\n      },\r\n    });\r\n\r\n    if (!user) {\r\n      throw new Error(\"User not found\");\r\n    }\r\n\r\n    const appointmentId = formData.get(\"appointmentId\");\r\n\r\n    if (!appointmentId) {\r\n      throw new Error(\"Appointment ID is required\");\r\n    }\r\n\r\n    // Find the appointment and verify the user is part of it\r\n    const appointment = await db.appointment.findUnique({\r\n      where: {\r\n        id: appointmentId,\r\n      },\r\n    });\r\n\r\n    if (!appointment) {\r\n      throw new Error(\"Appointment not found\");\r\n    }\r\n\r\n    // Verify the user is either the doctor or the patient for this appointment\r\n    if (appointment.doctorId !== user.id && appointment.patientId !== user.id) {\r\n      throw new Error(\"You are not authorized to join this call\");\r\n    }\r\n\r\n    // Verify the appointment is scheduled\r\n    if (appointment.status !== \"SCHEDULED\") {\r\n      throw new Error(\"This appointment is not currently scheduled\");\r\n    }\r\n\r\n    // Verify the appointment is within a valid time range (e.g., starting 5 minutes before scheduled time)\r\n    const now = new Date();\r\n    const appointmentTime = new Date(appointment.startTime);\r\n    const timeDifference = (appointmentTime - now) / (1000 * 60); // difference in minutes\r\n\r\n    if (timeDifference > 30) {\r\n      throw new Error(\r\n        \"The call will be available 30 minutes before the scheduled time\"\r\n      );\r\n    }\r\n\r\n    // Generate a token for the video session\r\n    // Token expires 2 hours after the appointment start time\r\n    const appointmentEndTime = new Date(appointment.endTime);\r\n    const expirationTime =\r\n      Math.floor(appointmentEndTime.getTime() / 1000) + 60 * 60; // 1 hour after end time\r\n\r\n    // Use user's name and role as connection data\r\n    const connectionData = JSON.stringify({\r\n      name: user.name,\r\n      role: user.role,\r\n      userId: user.id,\r\n    });\r\n\r\n    // Generate the token with appropriate role and expiration\r\n    const token = vonage.video.generateClientToken(appointment.videoSessionId, {\r\n      role: \"publisher\", // Both doctor and patient can publish streams\r\n      expireTime: expirationTime,\r\n      data: connectionData,\r\n    });\r\n\r\n    // Update the appointment with the token\r\n    await db.appointment.update({\r\n      where: {\r\n        id: appointmentId,\r\n      },\r\n      data: {\r\n        videoSessionToken: token,\r\n      },\r\n    });\r\n\r\n    return {\r\n      success: true,\r\n      videoSessionId: appointment.videoSessionId,\r\n      token: token,\r\n    };\r\n  } catch (error) {\r\n    console.error(\"Failed to generate video token:\", error);\r\n    throw new Error(\"Failed to generate video token:\" + error.message);\r\n  }\r\n}\r\n\r\n/**\r\n * Get doctor by ID\r\n */\r\nexport async function getDoctorById(doctorId) {\r\n  try {\r\n    const doctor = await db.user.findUnique({\r\n      where: {\r\n        id: doctorId,\r\n        role: \"DOCTOR\",\r\n        verificationStatus: \"VERIFIED\",\r\n      },\r\n    });\r\n\r\n    if (!doctor) {\r\n      throw new Error(\"Doctor not found\");\r\n    }\r\n\r\n    return { doctor };\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch doctor:\", error);\r\n    throw new Error(\"Failed to fetch doctor details\");\r\n  }\r\n}\r\n\r\n/**\r\n * Get available time slots for booking for the next 4 days\r\n */\r\nexport async function getAvailableTimeSlots(doctorId) {\r\n  try {\r\n    // Validate doctor existence and verification\r\n    const doctor = await db.user.findUnique({\r\n      where: {\r\n        id: doctorId,\r\n        role: \"DOCTOR\",\r\n        verificationStatus: \"VERIFIED\",\r\n      },\r\n    });\r\n\r\n    if (!doctor) {\r\n      throw new Error(\"Doctor not found or not verified\");\r\n    }\r\n\r\n    // Fetch a single availability record\r\n    const availability = await db.availability.findFirst({\r\n      where: {\r\n        doctorId: doctor.id,\r\n        status: \"AVAILABLE\",\r\n      },\r\n    });\r\n\r\n    if (!availability) {\r\n      throw new Error(\"No availability set by doctor\");\r\n    }\r\n\r\n    // Get the next 4 days\r\n    const now = new Date();\r\n    const days = [now, addDays(now, 1), addDays(now, 2), addDays(now, 3)];\r\n\r\n    // Fetch existing appointments for the doctor over the next 4 days\r\n    const lastDay = endOfDay(days[3]);\r\n    const existingAppointments = await db.appointment.findMany({\r\n      where: {\r\n        doctorId: doctor.id,\r\n        status: \"SCHEDULED\",\r\n        startTime: {\r\n          lte: lastDay,\r\n        },\r\n      },\r\n    });\r\n\r\n    const availableSlotsByDay = {};\r\n\r\n    // For each of the next 4 days, generate available slots\r\n    for (const day of days) {\r\n      const dayString = format(day, \"yyyy-MM-dd\");\r\n      availableSlotsByDay[dayString] = [];\r\n\r\n      // Create a copy of the availability start/end times for this day\r\n      const availabilityStart = new Date(availability.startTime);\r\n      const availabilityEnd = new Date(availability.endTime);\r\n\r\n      // Set the day to the current day we're processing\r\n      availabilityStart.setFullYear(\r\n        day.getFullYear(),\r\n        day.getMonth(),\r\n        day.getDate()\r\n      );\r\n      availabilityEnd.setFullYear(\r\n        day.getFullYear(),\r\n        day.getMonth(),\r\n        day.getDate()\r\n      );\r\n\r\n      let current = new Date(availabilityStart);\r\n      const end = new Date(availabilityEnd);\r\n\r\n      while (\r\n        isBefore(addMinutes(current, 30), end) ||\r\n        +addMinutes(current, 30) === +end\r\n      ) {\r\n        const next = addMinutes(current, 30);\r\n\r\n        // Skip past slots\r\n        if (isBefore(current, now)) {\r\n          current = next;\r\n          continue;\r\n        }\r\n\r\n        const overlaps = existingAppointments.some((appointment) => {\r\n          const aStart = new Date(appointment.startTime);\r\n          const aEnd = new Date(appointment.endTime);\r\n\r\n          return (\r\n            (current >= aStart && current < aEnd) ||\r\n            (next > aStart && next <= aEnd) ||\r\n            (current <= aStart && next >= aEnd)\r\n          );\r\n        });\r\n\r\n        if (!overlaps) {\r\n          availableSlotsByDay[dayString].push({\r\n            startTime: current.toISOString(),\r\n            endTime: next.toISOString(),\r\n            formatted: `${format(current, \"h:mm a\")} - ${format(\r\n              next,\r\n              \"h:mm a\"\r\n            )}`,\r\n            day: format(current, \"EEEE, MMMM d\"),\r\n          });\r\n        }\r\n\r\n        current = next;\r\n      }\r\n    }\r\n\r\n    // Convert to array of slots grouped by day for easier consumption by the UI\r\n    const result = Object.entries(availableSlotsByDay).map(([date, slots]) => ({\r\n      date,\r\n      displayDate:\r\n        slots.length > 0\r\n          ? slots[0].day\r\n          : format(new Date(date), \"EEEE, MMMM d\"),\r\n      slots,\r\n    }));\r\n\r\n    return { days: result };\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch available slots:\", error);\r\n    throw new Error(\"Failed to fetch available time slots: \" + error.message);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;IAqBsB,kBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 607, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/hooks/use-fetch.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { toast } from \"sonner\";\r\n\r\nconst useFetch = (cb) => {\r\n  const [data, setData] = useState(undefined);\r\n  const [loading, setLoading] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fn = async (...args) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await cb(...args);\r\n      setData(response);\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(error);\r\n      toast.error(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { data, loading, error, fn, setData };\r\n};\r\n\r\nexport default useFetch;\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,WAAW,CAAC;IAChB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,KAAK,OAAO,GAAG;QACnB,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,QAAQ;YACR,SAAS;QACX,EAAE,OAAO,OAAO;YACd,SAAS;YACT,wIAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO;QAC3B,SAAU;YACR,WAAW;QACb;IACF;IAEA,OAAO;QAAE;QAAM;QAAS;QAAO;QAAI;IAAQ;AAC7C;uCAEe","debugId":null}},
    {"offset": {"line": 647, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/app/%28main%29/doctors/%5Bspecialty%5D/%5Bid%5D/_components/appointment-form.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { format } from \"date-fns\";\r\nimport { Loader2, Clock, ArrowLeft, Calendar, CreditCard } from \"lucide-react\";\r\nimport { bookAppointment } from \"@/actions/appointments\";\r\nimport { toast } from \"sonner\";\r\nimport useFetch from \"@/hooks/use-fetch\";\r\n\r\nexport function AppointmentForm({ doctorId, slot, onBack, onComplete }) {\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  // Use the useFetch hook to handle loading, data, and error states\r\n  const { loading, data, fn: submitBooking } = useFetch(bookAppointment);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Create form data\r\n    const formData = new FormData();\r\n    formData.append(\"doctorId\", doctorId);\r\n    formData.append(\"startTime\", slot.startTime);\r\n    formData.append(\"endTime\", slot.endTime);\r\n    formData.append(\"description\", description);\r\n\r\n    // Submit booking using the function from useFetch\r\n    await submitBooking(formData);\r\n  };\r\n\r\n  // Handle response after booking attempt\r\n  useEffect(() => {\r\n    if (data) {\r\n      if (data.success) {\r\n        toast.success(\"Appointment booked successfully!\");\r\n        onComplete();\r\n      }\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n      <div className=\"bg-muted/20 p-4 rounded-lg border border-emerald-900/20 space-y-3\">\r\n        <div className=\"flex items-center\">\r\n          <Calendar className=\"h-5 w-5 text-emerald-400 mr-2\" />\r\n          <span className=\"text-white font-medium\">\r\n            {format(new Date(slot.startTime), \"EEEE, MMMM d, yyyy\")}\r\n          </span>\r\n        </div>\r\n        <div className=\"flex items-center\">\r\n          <Clock className=\"h-5 w-5 text-emerald-400 mr-2\" />\r\n          <span className=\"text-white\">{slot.formatted}</span>\r\n        </div>\r\n        <div className=\"flex items-center\">\r\n          <CreditCard className=\"h-5 w-5 text-emerald-400 mr-2\" />\r\n          <span className=\"text-muted-foreground\">\r\n            Cost: <span className=\"text-white font-medium\">2 credits</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"space-y-2\">\r\n        <Label htmlFor=\"description\">\r\n          Describe your medical concern (optional)\r\n        </Label>\r\n        <Textarea\r\n          id=\"description\"\r\n          placeholder=\"Please provide any details about your medical concern or what you'd like to discuss in the appointment...\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          className=\"bg-background border-emerald-900/20 h-32\"\r\n        />\r\n        <p className=\"text-sm text-muted-foreground\">\r\n          This information will be shared with the doctor before your\r\n          appointment.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"flex justify-between pt-2\">\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"outline\"\r\n          onClick={onBack}\r\n          disabled={loading}\r\n          className=\"border-emerald-900/30\"\r\n        >\r\n          <ArrowLeft className=\"mr-2 h-4 w-4\" />\r\n          Change Time Slot\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          disabled={loading}\r\n          className=\"bg-emerald-600 hover:bg-emerald-700\"\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n              Booking...\r\n            </>\r\n          ) : (\r\n            \"Confirm Booking\"\r\n          )}\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAVA;;;;;;;;;;;AAYO,SAAS,gBAAgB,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE;IACpE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,kEAAkE;IAClE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,aAAa,EAAE,GAAG,CAAA,GAAA,qHAAA,CAAA,UAAQ,AAAD,EAAE,+IAAA,CAAA,kBAAe;IAErE,yBAAyB;IACzB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAEhB,mBAAmB;QACnB,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,YAAY;QAC5B,SAAS,MAAM,CAAC,aAAa,KAAK,SAAS;QAC3C,SAAS,MAAM,CAAC,WAAW,KAAK,OAAO;QACvC,SAAS,MAAM,CAAC,eAAe;QAE/B,kDAAkD;QAClD,MAAM,cAAc;IACtB;IAEA,wCAAwC;IACxC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,MAAM;YACR,IAAI,KAAK,OAAO,EAAE;gBAChB,wIAAA,CAAA,QAAK,CAAC,OAAO,CAAC;gBACd;YACF;QACF;IACF,GAAG;QAAC;KAAK;IAET,qBACE,8OAAC;QAAK,UAAU;QAAc,WAAU;;0BACtC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,0MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC;gCAAK,WAAU;0CACb,CAAA,GAAA,qJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,KAAK,KAAK,SAAS,GAAG;;;;;;;;;;;;kCAGtC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,oMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;0CACjB,8OAAC;gCAAK,WAAU;0CAAc,KAAK,SAAS;;;;;;;;;;;;kCAE9C,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,kNAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;0CACtB,8OAAC;gCAAK,WAAU;;oCAAwB;kDAChC,8OAAC;wCAAK,WAAU;kDAAyB;;;;;;;;;;;;;;;;;;;;;;;;0BAKrD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,0HAAA,CAAA,QAAK;wBAAC,SAAQ;kCAAc;;;;;;kCAG7B,8OAAC,6HAAA,CAAA,WAAQ;wBACP,IAAG;wBACH,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;wBAC9C,WAAU;;;;;;kCAEZ,8OAAC;wBAAE,WAAU;kCAAgC;;;;;;;;;;;;0BAM/C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,2HAAA,CAAA,SAAM;wBACL,MAAK;wBACL,SAAQ;wBACR,SAAS;wBACT,UAAU;wBACV,WAAU;;0CAEV,8OAAC,gNAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAGxC,8OAAC,2HAAA,CAAA,SAAM;wBACL,MAAK;wBACL,UAAU;wBACV,WAAU;kCAET,wBACC;;8CACE,8OAAC,iNAAA,CAAA,UAAO;oCAAC,WAAU;;;;;;gCAA8B;;2CAInD;;;;;;;;;;;;;;;;;;AAMZ","debugId":null}},
    {"offset": {"line": 897, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/components/ui/alert.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst alertVariants = cva(\r\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-card text-card-foreground\",\r\n        destructive:\r\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Alert({\r\n  className,\r\n  variant,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"alert\"\r\n      role=\"alert\"\r\n      className={cn(alertVariants({ variant }), className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction AlertTitle({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"alert-title\"\r\n      className={cn(\"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction AlertDescription({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"alert-description\"\r\n      className={cn(\r\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Alert, AlertTitle, AlertDescription }\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,+DAA+D;QAC5E,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACJ;IACC,qBACG,8OAAC;QACA,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 964, "column": 0}, "map": {"version":3,"sources":["file:///D:/Web%20development/projects/doctors-appointment-platform/app/%28main%29/doctors/%5Bspecialty%5D/%5Bid%5D/_components/doctor-profile.jsx"],"sourcesContent":["// /app/doctors/[id]/_components/doctor-profile.jsx\r\n\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport Image from \"next/image\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport {\r\n  User,\r\n  Calendar,\r\n  Clock,\r\n  Medal,\r\n  FileText,\r\n  ChevronDown,\r\n  ChevronUp,\r\n  AlertCircle,\r\n} from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { SlotPicker } from \"./slot-picker\";\r\nimport { AppointmentForm } from \"./appointment-form\";\r\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\r\n\r\nexport function DoctorProfile({ doctor, availableDays }) {\r\n  const [showBooking, setShowBooking] = useState(false);\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n  const router = useRouter();\r\n\r\n  // Calculate total available slots\r\n  const totalSlots = availableDays?.reduce(\r\n    (total, day) => total + day.slots.length,\r\n    0\r\n  );\r\n\r\n  const toggleBooking = () => {\r\n    setShowBooking(!showBooking);\r\n    if (!showBooking) {\r\n      // Scroll to booking section when expanding\r\n      setTimeout(() => {\r\n        document.getElementById(\"booking-section\")?.scrollIntoView({\r\n          behavior: \"smooth\",\r\n        });\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  const handleSlotSelect = (slot) => {\r\n    setSelectedSlot(slot);\r\n  };\r\n\r\n  const handleBookingComplete = () => {\r\n    router.push(\"/appointments\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n      {/* Left column - Doctor Photo and Quick Info (fixed on scroll) */}\r\n      <div className=\"md:col-span-1\">\r\n        <div className=\"md:sticky md:top-24\">\r\n          <Card className=\"border-emerald-900/20\">\r\n            <CardContent className=\"pt-6\">\r\n              <div className=\"flex flex-col items-center text-center\">\r\n                <div className=\"relative w-32 h-32 rounded-full overflow-hidden mb-4 bg-emerald-900/20\">\r\n                  {doctor.imageUrl ? (\r\n                    <Image\r\n                      src={doctor.imageUrl}\r\n                      alt={doctor.name}\r\n                      fill\r\n                      className=\"object-cover\"\r\n                    />\r\n                  ) : (\r\n                    <div className=\"w-full h-full flex items-center justify-center\">\r\n                      <User className=\"h-16 w-16 text-emerald-400\" />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <h2 className=\"text-xl font-bold text-white mb-1\">\r\n                  Dr. {doctor.name}\r\n                </h2>\r\n\r\n                <Badge\r\n                  variant=\"outline\"\r\n                  className=\"bg-emerald-900/20 border-emerald-900/30 text-emerald-400 mb-4\"\r\n                >\r\n                  {doctor.specialty}\r\n                </Badge>\r\n\r\n                <div className=\"flex items-center justify-center mb-2\">\r\n                  <Medal className=\"h-4 w-4 text-emerald-400 mr-2\" />\r\n                  <span className=\"text-muted-foreground\">\r\n                    {doctor.experience} years experience\r\n                  </span>\r\n                </div>\r\n\r\n                <Button\r\n                  onClick={toggleBooking}\r\n                  className=\"w-full bg-emerald-600 hover:bg-emerald-700 mt-4\"\r\n                >\r\n                  {showBooking ? (\r\n                    <>\r\n                      Hide Booking\r\n                      <ChevronUp className=\"ml-2 h-4 w-4\" />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      Book Appointment\r\n                      <ChevronDown className=\"ml-2 h-4 w-4\" />\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right column - Doctor Details and Booking Section */}\r\n      <div className=\"md:col-span-2 space-y-6\">\r\n        <Card className=\"border-emerald-900/20\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-xl font-bold text-white\">\r\n              About Dr. {doctor.name}\r\n            </CardTitle>\r\n            <CardDescription>\r\n              Professional background and expertise\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <FileText className=\"h-5 w-5 text-emerald-400\" />\r\n                <h3 className=\"text-white font-medium\">Description</h3>\r\n              </div>\r\n              <p className=\"text-muted-foreground whitespace-pre-line\">\r\n                {doctor.description}\r\n              </p>\r\n            </div>\r\n\r\n            <Separator className=\"bg-emerald-900/20\" />\r\n\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Clock className=\"h-5 w-5 text-emerald-400\" />\r\n                <h3 className=\"text-white font-medium\">Availability</h3>\r\n              </div>\r\n              {totalSlots > 0 ? (\r\n                <div className=\"flex items-center\">\r\n                  <Calendar className=\"h-5 w-5 text-emerald-400 mr-2\" />\r\n                  <p className=\"text-muted-foreground\">\r\n                    {totalSlots} time slots available for booking over the next\r\n                    4 days\r\n                  </p>\r\n                </div>\r\n              ) : (\r\n                <Alert>\r\n                  <AlertCircle className=\"h-4 w-4\" />\r\n                  <AlertDescription>\r\n                    No available slots for the next 4 days. Please check back\r\n                    later.\r\n                  </AlertDescription>\r\n                </Alert>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Booking Section - Conditionally rendered */}\r\n        {showBooking && (\r\n          <div id=\"booking-section\">\r\n            <Card className=\"border-emerald-900/20\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-xl font-bold text-white\">\r\n                  Book an Appointment\r\n                </CardTitle>\r\n                <CardDescription>\r\n                  Select a time slot and provide details for your consultation\r\n                </CardDescription>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-6\">\r\n                {totalSlots > 0 ? (\r\n                  <>\r\n                    {/* Slot selection step */}\r\n                    {!selectedSlot && (\r\n                      <SlotPicker\r\n                        days={availableDays}\r\n                        onSelectSlot={handleSlotSelect}\r\n                      />\r\n                    )}\r\n\r\n                    {/* Appointment form step */}\r\n                    {selectedSlot && (\r\n                      <AppointmentForm\r\n                        doctorId={doctor.id}\r\n                        slot={selectedSlot}\r\n                        onBack={() => setSelectedSlot(null)}\r\n                        onComplete={handleBookingComplete}\r\n                      />\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <div className=\"text-center py-6\">\r\n                    <Calendar className=\"h-12 w-12 mx-auto text-muted-foreground mb-3\" />\r\n                    <h3 className=\"text-xl font-medium text-white mb-2\">\r\n                      No available slots\r\n                    </h3>\r\n                    <p className=\"text-muted-foreground\">\r\n                      This doctor doesn&apos;t have any available appointment\r\n                      slots for the next 4 days. Please check back later or try\r\n                      another doctor.\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,mDAAmD;;;;;AAGnD;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAOA;AACA;AACA;AACA;AACA;AA3BA;;;;;;;;;;;;;AA6BO,SAAS,cAAc,EAAE,MAAM,EAAE,aAAa,EAAE;IACrD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,kCAAkC;IAClC,MAAM,aAAa,eAAe,OAChC,CAAC,OAAO,MAAQ,QAAQ,IAAI,KAAK,CAAC,MAAM,EACxC;IAGF,MAAM,gBAAgB;QACpB,eAAe,CAAC;QAChB,IAAI,CAAC,aAAa;YAChB,2CAA2C;YAC3C,WAAW;gBACT,SAAS,cAAc,CAAC,oBAAoB,eAAe;oBACzD,UAAU;gBACZ;YACF,GAAG;QACL;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,gBAAgB;IAClB;IAEA,MAAM,wBAAwB;QAC5B,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,yHAAA,CAAA,OAAI;wBAAC,WAAU;kCACd,cAAA,8OAAC,yHAAA,CAAA,cAAW;4BAAC,WAAU;sCACrB,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;kDACZ,OAAO,QAAQ,iBACd,8OAAC,6HAAA,CAAA,UAAK;4CACJ,KAAK,OAAO,QAAQ;4CACpB,KAAK,OAAO,IAAI;4CAChB,IAAI;4CACJ,WAAU;;;;;iEAGZ,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC,kMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;;;;;;;;;;;kDAKtB,8OAAC;wCAAG,WAAU;;4CAAoC;4CAC3C,OAAO,IAAI;;;;;;;kDAGlB,8OAAC,0HAAA,CAAA,QAAK;wCACJ,SAAQ;wCACR,WAAU;kDAET,OAAO,SAAS;;;;;;kDAGnB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,oMAAA,CAAA,QAAK;gDAAC,WAAU;;;;;;0DACjB,8OAAC;gDAAK,WAAU;;oDACb,OAAO,UAAU;oDAAC;;;;;;;;;;;;;kDAIvB,8OAAC,2HAAA,CAAA,SAAM;wCACL,SAAS;wCACT,WAAU;kDAET,4BACC;;gDAAE;8DAEA,8OAAC,gNAAA,CAAA,YAAS;oDAAC,WAAU;;;;;;;yEAGvB;;gDAAE;8DAEA,8OAAC,oNAAA,CAAA,cAAW;oDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAWvC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,yHAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,8OAAC,yHAAA,CAAA,aAAU;;kDACT,8OAAC,yHAAA,CAAA,YAAS;wCAAC,WAAU;;4CAA+B;4CACvC,OAAO,IAAI;;;;;;;kDAExB,8OAAC,yHAAA,CAAA,kBAAe;kDAAC;;;;;;;;;;;;0CAInB,8OAAC,yHAAA,CAAA,cAAW;gCAAC,WAAU;;kDACrB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,8MAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;kEACpB,8OAAC;wDAAG,WAAU;kEAAyB;;;;;;;;;;;;0DAEzC,8OAAC;gDAAE,WAAU;0DACV,OAAO,WAAW;;;;;;;;;;;;kDAIvB,8OAAC,8HAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;kDAErB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,oMAAA,CAAA,QAAK;wDAAC,WAAU;;;;;;kEACjB,8OAAC;wDAAG,WAAU;kEAAyB;;;;;;;;;;;;4CAExC,aAAa,kBACZ,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,0MAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;kEACpB,8OAAC;wDAAE,WAAU;;4DACV;4DAAW;;;;;;;;;;;;qEAKhB,8OAAC,0HAAA,CAAA,QAAK;;kEACJ,8OAAC,oNAAA,CAAA,cAAW;wDAAC,WAAU;;;;;;kEACvB,8OAAC,0HAAA,CAAA,mBAAgB;kEAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAW3B,6BACC,8OAAC;wBAAI,IAAG;kCACN,cAAA,8OAAC,yHAAA,CAAA,OAAI;4BAAC,WAAU;;8CACd,8OAAC,yHAAA,CAAA,aAAU;;sDACT,8OAAC,yHAAA,CAAA,YAAS;4CAAC,WAAU;sDAA+B;;;;;;sDAGpD,8OAAC,yHAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAInB,8OAAC,yHAAA,CAAA,cAAW;oCAAC,WAAU;8CACpB,aAAa,kBACZ;;4CAEG,CAAC,8BACA,8OAAC,uLAAA,CAAA,aAAU;gDACT,MAAM;gDACN,cAAc;;;;;;4CAKjB,8BACC,8OAAC,4LAAA,CAAA,kBAAe;gDACd,UAAU,OAAO,EAAE;gDACnB,MAAM;gDACN,QAAQ,IAAM,gBAAgB;gDAC9B,YAAY;;;;;;;qEAKlB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,0MAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;0DACpB,8OAAC;gDAAG,WAAU;0DAAsC;;;;;;0DAGpD,8OAAC;gDAAE,WAAU;0DAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAczD","debugId":null}}]
}